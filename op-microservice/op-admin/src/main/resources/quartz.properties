#============================================================================
# Configure Main Scheduler Properties
#============================================================================
# 配置集群时，quartz 调度器的 id，由于配置集群时，只有一个调度器，必须保证每个服务器该值都相同，可以不用修改，只要每个 ams 都一样就行
org.quartz.scheduler.instanceName = AdminClusteredScheduler
# 集群中每台服务器自己的 id，AUTO 表示自动生成，无需修改
org.quartz.scheduler.instanceId = AUTO

#============================================================================
# Configure ThreadPool
#============================================================================
# quartz 线程池的实现类，无需修改
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# quartz 线程池中线程数，可根据任务数量和负责度来调整
org.quartz.threadPool.threadCount = 4
# quartz 线程优先级
org.quartz.threadPool.threadPriority = 5

#============================================================================
# Configure JobStore
#============================================================================
# 表示如果某个任务到达执行时间，而此时线程池中没有可用线程时，任务等待的最大时间，如果等待时间超过下面配置的值(毫秒)，本次就不在执行，而等待下一次执行时间的到来，可根据任务量和负责程度来调整
org.quartz.jobStore.misfireThreshold = 60000

# 实现集群时，任务的存储实现方式，org.quartz.impl.jdbcjobstore.JobStoreTX 表示数据库存储，无需修改
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
# 指定数据库方言
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 设置为 true，则 JDBCJobStore、JobDataMaps 中的所有值都将是“字符串”，因此可以将其存储为名称-值对，而不是以 BLOB 列的序列化形式存储更复杂的对象。这可以避免将非 String 类序列化为 BLOB 时可能产生的类版本控制问题
org.quartz.jobStore.useProperties = true
# 连接数据库数据源名称，与下面配置中 org.quartz.dataSource.adminDS 的 adminDS 一致即可，可以无需修改
org.quartz.jobStore.dataSource = springTxDataSource.schedulerFactoryBean
# quartz 存储任务相关数据的表的前缀，无需修改
org.quartz.jobStore.tablePrefix = QRTZ_

# 是否启用集群，启用，改为 true，注意：启用集群后，必须配置下面的数据源，否则 quartz 调度器会初始化失败
org.quartz.jobStore.isClustered = true
# 集群中服务器相互检测间隔，每台服务器都会按照下面配置的时间间隔往服务器中更新自己的状态，如果某台服务器超过以下时间没有 checkin，调度器就会认为该台服务器已经 down 掉，不会再分配任务给该台服务器
org.quartz.jobStore.clusterCheckinInterval = 20000

#============================================================================
# Configure Datasources
#============================================================================
#org.quartz.dataSource.adminDS.driver = com.mysql.cj.jdbc.Driver
#org.quartz.dataSource.adminDS.URL = jdbc:mysql://host.docker.internal:3306/onepiece?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&useSSL=true&serverTimezone=Asia/Shanghai
#org.quartz.dataSource.adminDS.user = root
#org.quartz.dataSource.adminDS.password = root
#org.quartz.dataSource.adminDS.maxConnections = 5
#org.quartz.dataSource.adminDS.validationQuery= select 0 from dual


