<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别以及优先级排序：OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!-- status="WARN"：用于设置log4j2自身内部日志的信息输出级别，默认是OFF-->
<!-- monitorInterval="30"：间隔秒数，自动检测配置文件的变更和重新配置本身，最小 5s-->
<Configuration status="WARN" monitorInterval="30">
    <!--自定义常量，之后使用${变量名}引用-->
    <Properties>
        <Property name="appName">op-gateway</Property>
        <Property name="logLevel">DEBUG</Property>
        <Property name="logFilePath">logs</Property>
        <Property name="consolePattern">%d{HH:mm:ss.SSS} [%t] [%p] %c - %m%n</Property>
        <Property name="filePattern">%d{HH:mm:ss.SSS} [%t] [%p] %c - %m%n</Property>
        <Property name="mailPattern">%d{HH:mm:ss:SSS} [%t] [%p] - %l - %m%n</Property>
        <Property name="rollingFilePattern">%d{HH:mm:ss:SSS} [%t] [%p] - %l - %m%n</Property>
        <Property name="rollingTimeInterval">1</Property>
        <Property name="rollingFileSize">500 MB</Property>
        <Property name="rollingFileNum">100</Property>
        <Property name="deleteDays">7d</Property>
        <Property name="deleteFileSize">500 MB</Property>
        <Property name="deleteFileNum">20</Property>
    </Properties>

    <!-- Appenders：定义输出内容、输出格式、输出方式、日志保存策略等，常用其下三种标签【Console|File|RollingFile】 -->
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="${consolePattern}"/>
        </Console>

        <!-- append="false"：每次清空文件重新输入日志，可用于测试-->
        <File name="File" fileName="${sys:user.home}/${logFilePath}/${appName}-test.log" append="false">
            <PatternLayout pattern="${filePattern}"/>
        </File>

        <!--<SMTP name="Mail" subject="系统异常" to="receiver@163.com" from="sender@163.com"
              smtpUsername="sender" smtpPassword="senderPassword"
              smtpHost="smtp.exmail.qq.com" smtpPort="465" bufferSize="10" smtpDebug="false">
            <PatternLayout pattern="${mailPattern}" />
        </SMTP>-->

        <!-- 使用 .gz 扩展名，log4j 将自动压缩日志文件 -->
        <RollingFile name="RollingFile" fileName="${sys:user.home}/${logFilePath}/${appName}.log"
                     filePattern="${logFilePath}/$${date:yyyy-MM}/${appName}-%d{yyyy-MM-dd}-%i.log.gz">
            <!-- ThresholdFilter：日志输出过滤 -->
            <!-- level="info"：日志级别；onMatch="ACCEPT"：级别在 info 之上则接受；onMismatch="DENY"：级别在 info 之下则拒绝 -->
            <!--            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <PatternLayout pattern="${rollingFilePattern}"/>

            <!-- Policies：日志滚动策略-->
            <Policies>
                <!-- TimeBasedTriggeringPolicy：基于时间的滚动策略 -->
                <!-- 与 filePattern 结合使用，filePattern 日期格式精确到哪一位，interval 也精确到哪一个单位 -->
                <!-- interval="1"：每隔 1 天产生新文件；modulate="true"：产生文件是否以 0 点偏移时间 -->
                <TimeBasedTriggeringPolicy interval="${rollingTimeInterval}" modulate="true"/>
                <!-- SizeBasedTriggeringPolicy：基于指定文件大小的滚动策略 -->
                <SizeBasedTriggeringPolicy size="${rollingFileSize}"/>
            </Policies>

            <!-- DefaultRolloverStrategy：默认滚动策略 -->
            <!-- max：保存日志文件的最大个数，默认是 7 -->
            <DefaultRolloverStrategy max="${rollingFileNum}">
                <Delete basePath="${logFilePath}" maxDepth="2">
                    <IfFileName glob="*/${appName}-*.log.gz">
                        <IfLastModified age="${deleteDays}">
                            <!--                            <IfAny>-->
                            <!--                                <IfAccumulatedFileSize exceeds="${deleteFileSize}" />-->
                            <!--                                <IfAccumulatedFileCount exceeds="${deleteFileNum}" />-->
                            <!--                            </IfAny>-->
                        </IfLastModified>
                    </IfFileName>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>

    <!-- 只有定义了 Loggers 并引入了 Appender，Appender 才会生效 -->
    <Loggers>
        <!--Logger 节点用来单独指定日志的形式，name 为包路径，比如要为 com.op.admin 包下所有日志指定为 DEBUG 级别 -->
        <Logger name="com.op.admin" level="${logLevel}"/>
        <Logger name="org.springframework.security" level="${logLevel}"/>

        <!-- Root 节点用来指定项目的根日志，如果没有单独指定 Logger，那么就会默认使用该 Root 日志输出 -->
        <Root level="INFO">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFile"/>
        </Root>
    </Loggers>
</Configuration>
